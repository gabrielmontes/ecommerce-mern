version: "3"
services:
  database:
    image : mongo:4.0.3
    container_name: database
    restart: always
    environment:
      - MONGO_INITDB_USERNAME=${MONGO_INITDB_USERNAME}
      - MONGO_INITDB_PASSWORD=${MONGO_INITDB_PASSWORD}
      - MONGO_INITDB_NAME=${MONGO_INITDB_NAME}
    volumes:
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
      - database:/data/db
    expose:
      - 27017
  rabbitmq:
    image: 'rabbitmq:3.11-rc-alpine'
    container_name: rabbitmq
    restart: always
    expose:
      - 5672
    environment:
      - AMQP_URL=${AMQP_URL}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10
  api:
    image: nginx:alpine
    container_name: api-gw
    restart: always
    expose:
      - 8001
    depends_on:
      frontend:
        condition: service_started
      users:
        condition: service_started
      orders:
        condition: service_started
      products:
        condition: service_started
    volumes:
      - ./apigw-nginx.conf:/etc/nginx/conf.d/default.conf
      - cache-apigw:/var/cache/nginx
  email:
    image: email:ecommerce
    container_name: ms-email
    restart: always
    expose:
    - 8003
    depends_on:
      users:
        condition: service_started
      orders:
        condition: service_started
      products:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  users:
    image: users:ecommerce
    container_name: ms-users
    restart: always
    expose:
      - 8002
    depends_on:
      database:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  orders:
    image: orders:ecommerce
    container_name: ms-orders
    restart: always
    expose:
      - 8004
    depends_on:
      rabbitmq:
        condition: service_healthy
      database:
        condition: service_started
  products:
    image: products:ecommerce
    container_name: ms-products
    restart: always
    expose:
      - 8005
    volumes:
      - uploads:/usr/src/app/uploads
    depends_on:
      database:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  frontend:
    image: frontend:ecommerce
    container_name: frontend
    restart: always
    ports:
      - 3000:3000
    stdin_open: true
    volumes:
    - cache:/var/cache/nginx
volumes:
  database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: app/database
  uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: app/uploads
  cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: app/cache
  cache-apigw:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: app/cache-apigw
